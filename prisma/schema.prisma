generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

// projects - id, creator, name, description, createdAt
// tasks - title, description, tags[], createdAt, deadline, assignedTo, project_id
// user - id, email, passwordHash, createdAt
// userProjects - user_id, project_id, createdAt

model Project {
    id          Int           @id @default(autoincrement())
    creator     User          @relation(fields: [creatorId], references: [id])
    creatorId   String
    createdAt   DateTime      @default(now())
    description String
    members     UserProject[]
    title       String
    tasks       Task[]
}

model User {
    id              String        @id @default(cuid())
    email           String        @unique
    username        String
    passwordHash    String?
    projectsCreated Project[]
    tasksAssigned   Task[]        @relation("taskAssignee")
    projects        UserProject[]
    tasksCreated    Task[]        @relation("taskCreator")
}

enum Status {
    TODO
    DOING
    DONE
}

model Task {
    id          Int      @id @default(autoincrement())
    title       String
    description String
    tags        String[]
    createdAt   DateTime @default(now())
    creator     User     @relation("taskCreator", fields: [creatorId], references: [id])
    creatorId   String
    deadline    DateTime
    assignee    User?    @relation("taskAssignee", fields: [assigneeId], references: [id])
    assigneeId  String?
    status      Status   @default(TODO)
    project     Project  @relation(fields: [projectId], references: [id])
    projectId   Int
}

model UserProject {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    project   Project  @relation(fields: [projectId], references: [id])
    projectId Int
    createdAt DateTime @default(now())
}
